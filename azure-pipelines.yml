trigger:
  branches:
    include:
      - '*'
pool:
  vmImage: 'ubuntu-latest'

variables:
- group: build.variables
- name: MAVEN_CACHE_FOLDER
  value: $(Pipeline.Workspace)/.m2/repository
- name: MAVEN_OPTS
  value: '-Dmaven.repo.local=$(MAVEN_CACHE_FOLDER)  -s $(muleSettingsFile.secureFilePath)'  
- name: MAVEN_OPTS_BUILD
  value: '-Dsecure.key=mule -DskipTests ' 
- name: MAVEN_OPTS_TEST_CUCUMBER
  value: '-Dtestfile=src/test/javarunner.TestRunner.java -Dsecure.key=mule -Dmule.env=dev -Dproject.version=1.0.0 '
- name: MAVEN_OPTS_TEST_MUNIT
  value: '-Dsecure.key=mule -Dmule.env=dev -Dproject.version=1.0.0 '  
- name: PROJECT_NAME
  value: $[variables.projectName] 
- name: ANYPOINT_USERNAME
  value: $[variables.anypointUsername]
- name: ANYPOINT_PASSWORD
  value: $[variables.anypointPassword]
- name: MULE_ORG
  value: $[variables.muleOrg]

steps:
- task: DownloadSecureFile@1
  name: muleSettingsFile
  displayName: 'Download Mulesoft Settings'
  inputs:
    secureFile: 'settings.xml'
- script: |
   npm install -g anypoint-cli   
  displayName: 'Install Anypoint CLI'
- script: |
   anypoint-cli --username=$(ANYPOINT_USERNAME) --password=$(ANYPOINT_PASSWORD) --organization='$(MULE_ORG)' governance api validate --rulesets ruleset.yaml  $(PROJECT_NAME).zip   
  displayName: 'Api Governance Validation'

- task: CacheBeta@0
  inputs:
    key: $(Build.SourcesDirectory)/pom.xml
    path: $(MAVEN_CACHE_FOLDER)
  displayName: Cache Maven local repo
- task: SonarQubePrepare@5
  inputs:
    SonarQube: $(PROJECT_NAME)
    scannerMode: 'Other'
    extraProperties: |
      # Additional properties that will be passed to the scanner,
      # Put one key=value per line, example:
      # sonar.exclusions=**/*.bin
      sonar.projectKey=$(PROJECT_NAME)_$(PROJECT_NAME)
- task: Maven@3
  inputs:
    mavenPomFile: 'pom.xml'
    publishJUnitResults: true
    testResultsFiles: '**/surefire-reports/TEST-*.xml'
    mavenOptions: '-Xmx3072m'
    javaHomeOption: 'JDKVersion'
    jdkVersionOption: '1.8'
    jdkArchitectureOption: 'x64'
    goals: 'package $(MAVEN_OPTS) $(MAVEN_OPTS_BUILD)'
    sonarQubeRunAnalysis: true
    isJacocoCoverageReportXML: true
    sqMavenPluginVersionChoice: 'pom'
  displayName: Maven Build

- task: SonarQubePublish@5
  inputs:
    pollingTimeoutSec: '300'

- task: CopyFiles@2
  inputs:
    Contents: '**/target/*.jar'
    TargetFolder: $(Build.ArtifactStagingDirectory)
    CleanTargetFolder: true
    flattenFolders: true  
# - task: Maven@3
#   inputs:
#     mavenPomFile: 'pom.xml'
#     mavenOptions: '-Xmx3072m'
#     javaHomeOption: 'JDKVersion'
#     jdkVersionOption: '1.8'
#     jdkArchitectureOption: 'x64'
#     goals: 'clean test -Dsecure.key=mule $(MAVEN_OPTS)'
#   displayName: Munit Test  
- task: Maven@3
  inputs:
    mavenPomFile: 'pom.xml'
    publishJUnitResults: true
    testResultsFiles: '**/surefire-reports/TEST-*.xml'
    mavenOptions: '-Xmx3072m'
    javaHomeOption: 'JDKVersion'
    jdkVersionOption: '1.8'
    jdkArchitectureOption: 'x64'
    goals: 'test $(MAVEN_OPTS) $(MAVEN_OPTS_TEST_MUNIT)'
    sqMavenPluginVersionChoice: 'pom'
  continueOnError: true
  displayName: Munit Test

- task: PublishTestResults@2
  inputs:
    testResultsFiles: '**/TEST-*.xml' 
    #searchFolder: '$(System.DefaultWorkingDirectory)' # Optional
    mergeTestResults: true # Optional
    #failTaskOnFailedTests: false # Optional
    # testRunTitle: APIOPS-MUNIT
    #buildPlatform: # Optional
    #buildConfiguration: # Optional
    publishRunAttachments: true # Optional
  continueOnError: true 
  displayName: Munit Publish Report
# - task: Maven@3
#   inputs:
#     mavenPomFile: 'pom.xml'
#     mavenOptions: '-Xmx3072m'
#     javaHomeOption: 'JDKVersion'
#     jdkVersionOption: '1.8'
#     jdkArchitectureOption: 'x64'
#     goals: 'test $(MAVEN_OPTS) $(MAVEN_OPTS_TEST_CUCUMBER)'
#     sqMavenPluginVersionChoice: 'pom'
#   continueOnError: true
#   displayName: Functional Test 
- task: PublishPipelineArtifact@1
  inputs:
    targetPath: $(System.DefaultWorkingDirectory)
    artifact: 'drop'
# - task: NodeTool@0
#   displayName: 'Install Node 12.x'
#   inputs:
#     versionSpec: 12.x
# - task: PublishCucumberReport@1
#   inputs:
#     jsonDir: 'results'
#     outputPath: 'target/cucumber-reports'
#     theme: 'bootstrap'
#     reportSuiteAsScenarios: false
#     name: cucumber
